/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package quotes;

import com.google.gson.Gson;
import com.google.gson.reflect.TypeToken;
import com.google.gson.stream.JsonReader;

import java.io.*;
import java.net.HttpURLConnection;
import java.net.URL;
import java.sql.SQLOutput;
import java.util.ArrayList;

public class App {
    public static void main(String[] args) throws IOException {
//       String newQuote = returnQuote("src/main/resources/quotes.json");
//       System.out.println(newQuote);
        quoteFromInternet();
       // createArrayListFromJson();
//        combineArrayListAndPushToJsonFile(createArrayListFromJson(), quoteFromInternet());
    }

    public static String returnQuote(String filePath) throws FileNotFoundException {
        Gson gson = new Gson();
        JsonReader reader = new JsonReader(new FileReader(filePath));
        Quote[] quotes = gson.fromJson(reader, Quote[].class);
        int newRandom = (int) (Math.random() * quotes.length);
        return quotes[newRandom].toString();
    }


     public static Quote quoteFromInternet() throws FileNotFoundException {
        Gson gson = new Gson(); //
         Quote newQuote = null;
        try {
            URL url = new URL("http://ron-swanson-quotes.herokuapp.com/v2/quotes"); //making a URL type with a new variable
            HttpURLConnection connection = (HttpURLConnection) url.openConnection(); //creating new variable connection n putting the value to open HTTP url
            connection.setRequestMethod("GET"); //getting the request

            //Synchronous: Java is going to be working on running line 15 for a while..
            BufferedReader in  = new BufferedReader(new InputStreamReader(connection.getInputStream())); //


            String[] quoteApi = gson.fromJson(in, String[].class); //calling a BufferedReader in, pointing to String class.
            newQuote = new Quote(quoteApi[0]);


            System.out.println(quoteApi[0]);
            in.close();
        } catch (IOException e) { // catch a error massage from url
            System.out.println(e); // printing a error massage
            String newQuote1 = returnQuote("src/main/resources/quotes.json");
            System.out.println(newQuote1);


        }
         return newQuote;

     }

     public static ArrayList<Quote> createArrayListFromJson() throws FileNotFoundException {
        Gson gson = new Gson();
        FileReader jsonFileReader = new FileReader("src/main/resources/quotes.json");
        ArrayList<Quote> arrayListQuote = gson.fromJson(jsonFileReader, new TypeToken<ArrayList<Quote>>(){}.getType());
        return arrayListQuote;
     }

     public static void combineArrayListAndPushToJsonFile(ArrayList<Quote> arrayListOfQuotes, Quote quoteObj) throws IOException {
        Gson gson = new Gson();
        arrayListOfQuotes.add(quoteObj);
        BufferedWriter writer = null;

        String stringOfQuote = gson.toJson(arrayListOfQuotes);
        writer = new BufferedWriter(new FileWriter("src/main/resources/quotes.json"));
        writer.write(stringOfQuote);
        writer.close();

     }

}
